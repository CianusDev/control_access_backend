import { pool } from '../config/database';

async function seedDatabase() {
    try {
        // Ins√©rer les r√¥les de base
        await pool.query(`
            INSERT INTO roles (nom, description, niveau_acces) VALUES
            ('Super Admin', 'Acc√®s complet au syst√®me', 5),
            ('Admin', 'Administration des utilisateurs et zones', 4),
            ('Manager', 'Gestion des √©quipes et acc√®s limit√©', 3),
            ('Employ√©', 'Acc√®s standard aux zones autoris√©es', 2),
            ('Visiteur', 'Acc√®s limit√© et temporaire', 1)
            ON CONFLICT (nom) DO NOTHING;
        `);

        // Ins√©rer la configuration par d√©faut
        await pool.query(`
            INSERT INTO configuration (cle, valeur, description, type_donnee) VALUES
            ('max_tentatives_echec', '3', 'Nombre maximum de tentatives √©chou√©es avant verrouillage', 'integer'),
            ('duree_verrouillage_minutes', '15', 'Dur√©e de verrouillage en minutes', 'integer'),
            ('alerte_echecs_consecutifs', '3', 'Nombre d''√©checs cons√©cutifs avant alerte', 'integer'),
            ('duree_session_admin_heures', '8', 'Dur√©e des sessions admin en heures', 'integer'),
            ('notification_email_actif', 'true', 'Activer les notifications par email', 'boolean'),
            ('retention_logs_jours', '90', 'Dur√©e de r√©tention des logs en jours', 'integer')
            ON CONFLICT (cle) DO NOTHING;
        `);

        console.log('üå± Donn√©es initiales ins√©r√©es avec succ√®s.');

    } catch (error) {
        console.error("‚ùå Erreur lors de l'insertion des donn√©es initiales :", error);
    } finally {
        // pool.end() est g√©r√© par le script d'initialisation principal (db_init.ts)
        // await pool.end();
    }
}

// Exporter la fonction pour qu'elle puisse √™tre appel√©e par d'autres scripts
export { seedDatabase };

// Supprimer l'appel direct si ce script n'est pas cens√© √™tre ex√©cut√© seul
// seedDatabase();
