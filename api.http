// @no-log

@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJhNTc0OWQ5Mi02ZTE5LTQ3ODctOTNjOC1lMDQ3NDZjMWY0MjgiLCJyb2xlSWQiOiJlNWZjMmNiZC0zMjM4LTQ2MmItYWRjMy01OTU2OGM4NGJhYmYiLCJpYXQiOjE3NDgyMTAxNDIsImV4cCI6MTc0ODI1MzM0Mn0.TX8TQJKuKJdtiP_03OzcOZkFwjlzQd7Ml97ILANwIxE



// ==========================================
POST http://localhost:5000/api/auth/login
Content-Type: application/json

{
  "email": "root@example.com",
  "password": "admin1234"
}

###

# Après vous être connecté ci-dessus, copiez le token JWT de la réponse et utilisez-le dans l'en-tête Authorization pour les requêtes suivantes.
# Remplacez <YOUR_JWT_TOKEN> par le token obtenu.

### Authentification

// Obtenir l'utilisateur courant (nécessite un token valide)
GET http://localhost:5000/api/auth/me
Authorization: Bearer {{token}}

###

### Utilisateurs (User)

// Obtenir tous les utilisateurs (avec pagination si implémentée)
GET http://localhost:5000/api/users
Authorization: Bearer {{token}}

###

// Obtenir un utilisateur par ID
GET http://localhost:5000/api/users/bd3c5551-e3a3-4716-b45c-21ca126fd0e2
Authorization: Bearer {{token}}

###

// Créer un nouvel utilisateur
POST http://localhost:5000/api/users
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "nom": "Nouveau",
  "prenom": "Admin",
  "email": "ujashalomtchandikou@gmail.com",
  "password": "motdepasse",
  "role_id": "dbc7e135-98e5-492a-aad8-9cda320c1af6",
  "statut": "actif"
}

###

// Mettre à jour un utilisateur par ID
PUT http://localhost:5000/api/users/bd3c5551-e3a3-4716-b45c-21ca126fd0e2
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "statut": "actif"
  // Ajoutez d'autres champs à mettre à jour si nécessaire
}

###

// Supprimer un utilisateur par ID
DELETE http://localhost:5000/api/users/b38cc859-9404-4adb-bf64-e464fa2b8f10
Authorization: Bearer {{token}}

###

### Rôles (Role)

// Obtenir tous les rôles
GET http://localhost:5000/api/roles
Authorization: Bearer {{token}}
Content-Type: application/json
###

// Obtenir un rôle par ID
GET http://localhost:5000/api/roles/<ROLE_ID>
Authorization: Bearer {{token}}

###

// Créer un nouveau rôle
POST http://localhost:5000/api/roles
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "nom": "Nouveau Role",
  "description": "Description du nouveau rôle",
  "niveau_acces": 1
}

###

// Mettre à jour un rôle par ID
PUT http://localhost:5000/api/roles/3bbf6689-298c-4c27-a6c4-c73b0b175834
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "description": "Gestion des utilisateurs et zones"
}

###

// Supprimer un rôle par ID
DELETE http://localhost:5000/api/roles/3bbf6689-298c-4c27-a6c4-c73b0b175834
Authorization: Bearer {{token}}

###

### Badges (Badge)

// Obtenir tous les badges
GET http://localhost:5000/api/badges
Authorization: Bearer {{token}}

###

// Obtenir un badge par ID
GET http://localhost:5000/api/badges/XX-XX-XX-XX
Authorization: Bearer {{token}}

###

// Créer un nouveau badge
POST http://localhost:5000/api/badges
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "uid_rfid": "XX-XX-XX-XX",
  "utilisateur_id": "bd3c5551-e3a3-4716-b45c-21ca126fd0e2",
  "statut": "actif",
  "date_expiration": "2025-12-31"
}

###

// Mettre à jour un badge par ID
PUT http://localhost:5000/api/badges/a3a743ce-c7c1-4f7a-bfc5-eacd676ecaf8
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "statut": "perdu"
}

###

// Supprimer un badge par ID
DELETE http://localhost:5000/api/badges/a3a743ce-c7c1-4f7a-bfc5-eacd676ecaf8
Authorization: Bearer {{token}}

###

### Dispositifs (Device)

// Obtenir tous les dispositifs
GET http://localhost:5000/api/devices
Authorization: Bearer {{token}}

###

// Obtenir un dispositif par ID
GET http://localhost:5000/api/devices/a95c2e5c-2072-4ffd-9a4c-91ddf6ba154c
Authorization: Bearer {{token}}

###

// Créer un nouveau dispositif
POST http://localhost:5000/api/devices
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "nom": "Nouveau Dispositif",
  "mac_address": "00:1A:2B:3C:4D:5E", 
  "zone_acces_id": "f29aa04d-b318-4c26-af3d-cf2d187bdbcb", 
  "statut": "en_ligne"
}

###

// Mettre à jour un dispositif par ID
PUT http://localhost:5000/api/devices/a95c2e5c-2072-4ffd-9a4c-91ddf6ba154c
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "statut": "maintenance",
  "ip_address": "192.168.1.100"
}

###

// Supprimer un dispositif par ID
DELETE http://localhost:5000/api/devices/<DEVICE_ID>
Authorization: Bearer {{token}}

###

### Logs d'accès (AccessLog)

// Obtenir tous les logs d'accès (avec pagination)
GET http://localhost:5000/api/access-logs
Authorization: Bearer {{token}}

###

// Obtenir un log d'accès par ID
GET http://localhost:5000/api/access-logs/<ACCESS_LOG_ID>
Authorization: Bearer {{token}}

###

// Note: La création et la suppression des logs d'accès sont généralement gérées automatiquement par le système.
// Une route POST/DELETE pour les logs n'est souvent pas nécessaire pour une API externe.

### Alertes (Alert)

// Obtenir toutes les alertes (avec pagination)
GET http://localhost:5000/api/alerts
  Authorization: Bearer {{token}}

###

// Obtenir une alerte par ID
GET http://localhost:5000/api/alerts/<ALERT_ID>
Authorization: Bearer {{token}}

###

// Créer une nouvelle alerte (souvent déclenchée par le système interne, mais utile pour les tests)
POST http://localhost:5000/api/alerts
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "type_alerte": "tentative_intrusion",
  "titre": "Tentative d'intrusion détectée",
  "message": "Une tentative d'accès suspecte a été enregistrée sur le dispositif XYZ.",
  "niveau_gravite": "critical",
  "dispositif_id": "a95c2e5c-2072-4ffd-9a4c-91ddf6ba154c", // UUID du dispositif concerné
  "log_acces_id": "exemple_id" 
}

###

// Mettre à jour une alerte par ID (par exemple, changer son statut)
PUT http://localhost:5000/api/alerts/<ALERT_ID>
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "statut": "traitee",
  "commentaire_traitement": "Examiné et résolu."
}

###

// Supprimer une alerte par ID
DELETE http://localhost:5000/api/alerts/<ALERT_ID>
Authorization: Bearer {{token}}

###

### Zones d'accès (ZoneAcces)

// Obtenir toutes les zones d'accès
GET http://localhost:5000/api/zones-acces
Authorization: Bearer {{token}}

###

// Obtenir une zone d'accès par ID
GET http://localhost:5000/api/zones-acces/<ZONE_ACCES_ID>
Authorization: Bearer {{token}}

###

// Créer une nouvelle zone d'accès
POST http://localhost:5000/api/zones-acces
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "nom": "Zone Sécurisée",
  "description": "Zone nécessitant un accès restreint.",
  "niveau_securite": 4,
  "actif": true
}

###

// Mettre à jour une zone d'accès par ID
PUT http://localhost:5000/api/zones-acces/<ZONE_ACCES_ID>
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "actif": false
}

###

// Supprimer une zone d'accès par ID
DELETE http://localhost:5000/api/zones-acces/<ZONE_ACCES_ID>
Authorization: Bearer {{token}}

###

### Permissions (Permission)

// Obtenir toutes les permissions
GET http://localhost:5000/api/permissions
Authorization: Bearer {{token}}

###

// Obtenir une permission par ID
GET http://localhost:5000/api/permissions/<PERMISSION_ID>
Authorization: Bearer {{token}}

###

// Créer une nouvelle permission
POST http://localhost:5000/api/permissions
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "role_id": "<ROLE_UUID>", // UUID du rôle
  "zone_acces_id": "<ZONE_ACCES_UUID>", // UUID de la zone d'accès
  "heure_debut": "08:00:00",
  "heure_fin": "18:00:00",
  "jours_semaine": [1, 2, 3, 4, 5], // Lundi à Vendredi
  "actif": true
}

###

// Mettre à jour une permission par ID
PUT http://localhost:5000/api/permissions/<PERMISSION_ID>
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "actif": false
}

###

// Supprimer une permission par ID
DELETE http://localhost:5000/api/permissions/<PERMISSION_ID>
Authorization: Bearer {{token}}

###

### Configuration (Configuration)

// Obtenir toutes les configurations
GET http://localhost:5000/api/configuration
Authorization: Bearer {{token}}

###

// Obtenir une configuration par clé
GET http://localhost:5000/api/configuration/<CONFIG_KEY>
Authorization: Bearer {{token}}

###

// Créer une nouvelle configuration
POST http://localhost:5000/api/configuration
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "cle": "nouvelle_cle",
  "valeur": "nouvelle_valeur",
  "description": "Une nouvelle option de configuration",
  "type_donnee": "string"
}

###

// Mettre à jour une configuration par clé
PUT http://localhost:5000/api/configuration/<CONFIG_KEY>
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "valeur": "valeur_mise_a_jour"
}

###

// Supprimer une configuration par clé
DELETE http://localhost:5000/api/configuration/<CONFIG_KEY>
Authorization: Bearer {{token}}

###

### Sessions Admin (SessionAdmin)

// Obtenir toutes les sessions admin
GET http://localhost:5000/api/sessions-admin
Authorization: Bearer {{token}}

###

// Obtenir une session admin par ID
GET http://localhost:5000/api/sessions-admin/<SESSION_ADMIN_ID>
Authorization: Bearer {{token}}

###

// Note: La création et la suppression des sessions admin sont souvent gérées automatiquement lors du login/logout.
// Des routes POST/DELETE directes ne sont pas toujours exposées via l'API. 